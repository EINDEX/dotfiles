# .zshrc

## Zinit Core config
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})â€¦%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl

## Zinit Snippets


### load Oh My ZSH plugins
omz_plugins=(
    git
    tmux
    gitignore
    cp
    colored-man-pages
)
for plugin in ${omz_plugins[@]}; do
    zinit snippet OMZ::plugins/$plugin/$plugin.plugin.zsh
done
zinit snippet OMZ::lib/key-bindings.zsh
zinit snippet OMZ::lib/history.zsh

### load other zinit plugins
zinit load zdharma-continuum/history-search-multi-word
zinit light zsh-users/zsh-autosuggestions
zinit light zdharma-continuum/fast-syntax-highlighting

# zinit pyenv
zinit light mattberther/zsh-pyenv

## Language
export LANG=zh_CN.UTF-8
export LC_MESSAGES="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"

## Alias
alias aria="aria2c -s 16 -x 16"
alias ls="ls -G"

## Key Binding
### Support up/down line for search
bindkey '^[[A' up-line-or-search
bindkey '^[[B' down-line-or-search

## Zstyle
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}'


## Functions
### macOS setting up
if [ `uname` = "Darwin" ]; then
    ## sysatem updated
    update() {
        brew upgrade
        curl $CASK_LIVECHECK_GIST_RAW_URL --output ~/.brew_livecheck_watchlist
        brew list --casks -1 | grep -F -f ~/.brew_livecheck_watchlist | sort | uniq | awk '{print "Start upgrade "$1 ;system("brew upgrade --greedy "$1)}'
    }

    export EDITOR="code -w"

    ## DNS Clean up
    alias dnsclean="sudo killall -HUP mDNSResponder; sleep 2; echo DNS Cache Reset"
fi

## Golang
if ! command -v go &> /dev/null ; then
    export GO111MODULE=on
    export GOPATH=$HOME/go
    export GOBIN=$HOME/go/bin
    export PATH="$PATH:$GOBIN"
fi

## Docker
if ! command -v docker &> /dev/null ; then
    zinit ice as"program" from"gh-r" mv"docker-c* -> docker-compose"
    zinit light docker/compose
fi

## Python
if ! command -v python &> /dev/null ; then
    zinit light pyenv/pyenv
fi

## Node
### N
if [ -d $HOME/.n ]; then
    export N_PREFIX=$HOME/.n
    export PATH=$PATH:$N_PREFIX/bin
fi

## Ruby
if [ -d $HOME/.rvm ]; then
    export PATH="$PATH:$HOME/.rvm/bin"
fi

## direnv
zplugin ice from"gh-r" as"program" mv"direnv* -> direnv" \
    './direnv hook zsh > zhook.zsh' atpull'%atclone' pick"direnv"
zplugin light direnv/direnv


## GCP
if [ `uname` = "Darwin" ]; then
    source "/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc"
fi

## Chezmoi
alias cz='chezmoi'
source ~/.config/chezmoi/completion.zsh

## GPG
export GPG_TTY=$(tty)   

## ZSH theme
### Load starship theme via zinit
zinit ice as"command" from"gh-r" atclone"./starship init zsh > init.zsh; ./starship completions zsh > _starship" atpull"%atclone" src"init.zsh"
zinit light starship/starship
